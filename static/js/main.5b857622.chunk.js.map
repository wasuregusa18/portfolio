{"version":3,"sources":["components/Contact.js","hooks/updateTitle.js","helper/str2obj.js","components/InkstoneIcon.js","components/Framework.js","components/ArrayKey.js","components/ProjectsArray.js","components/Skills.js","components/SlideMedia.js","components/TechList.js","components/MethodologySteps.js","components/LinkArray.js","components/CollapsableParagraph.js","components/ProjectSlide.js","components/Projects.js","components/Code.js","components/Quill.js","components/Home.js","components/TypedCode.js","components/DownloadIcons.js","components/About.js","components/NotFound.js","components/NextPage.js","App.js","index.js"],"names":["Text","Typography","variants","email","icon","props","MailFilled","style","color","tooltip","link","target","github","GithubFilled","linkedin","LinkedinFilled","ContactIcon","variant","rel","href","display","textAlign","fontSize","Contact","isModalVisible","handleModalExit","title","visible","footer","onCancel","justify","gutter","map","i","index","useUpdateTitle","useEffect","document","getStyleObjectFromString","str","split","forEach","el","property","value","formattedProperty","splitted","length","slice","word","toUpperCase","join","formatStringToCamelCase","trim","InkstoneSvgNoBG","viewBox","height","width","id","version","transform","d","InkstoneIcon","Icon","component","Content","Layout","Footer","Sider","menuItems","key","HomeOutlined","ContactsOutlined","DotChartOutlined","ProjectOutlined","MobileOutlined","views","capitalize","string","charAt","Framework","path","useState","collapsed","setCollapsed","history","useHistory","currentPage","location","pathname","includes","titleString","breadcrumbData","minHeight","collapsible","onCollapse","preVal","className","left","theme","selectedKeys","menuSelected","mode","onClick","e","setModalVisible","setSelected","push","menuItem","Item","margin","x","padding","modalVisible","children","Date","getFullYear","keyData","clss","DatabaseOutlined","CompassOutlined","ArrayKey","iconClass","keysHovered","grid","xs","dataSource","Object","entries","renderItem","tag","onMouseOver","setKeysHovered","onMouseOut","CheckableTag","Tag","data","keys","project2grouping","ProjectArray","handleClick","project2index","innerText","setCarousel","header","sm","md","lg","xl","item","event","handleHover","SkillsTable","isHighlighted","setHighlighted","columns","dataIndex","render","tags","checked","indexOf","project","entry2related","tableData","pagination","rowKey","SlideMedia","mediaArray","media","filename","isImage","test","isVideo","Error","isImageFile","src","alt","controls","TechList","tech","Step","Steps","MethodologySteps","methArray","isVisible","direction","currentStep","setStep","timeoutRef","useRef","moveNextStep","count","current","setTimeout","clearTimeout","progressDot","LinkArray","source","icons","CameraOutlined","LaptopOutlined","CodeOutlined","links","text","l","undefined","shouldShow","toShow","button","type","disabled","placement","Paragraph","CollapsableParagraph","settings","expanded","setExpanded","setKey","newSettings","onExpand","ellipsis","Header","ellipsisSetting","rows","expandable","noMedia","ContentImage","objective","implementation","span","overflow","AimOutlined","NodeIndexOutlined","marginBottom","ControlOutlined","ContentNoImage","iconLookup","ProjectSlideWrapper","name","methodology","grouping","contentProps","line","Projects","intervalTimer","useIdleTimer","timeout","onIdle","slider","setInterval","next","onActive","clearInterval","debounce","carouselShowing","currentSlide","setSlide","dotPosition","initialSlide","autoplay","ref","afterChange","innerSlider","state","ProjectData","Code","code","language","codeBlock","Prism","highlightElement","hide","Quill","toHighlight","Title","fadeInTime","delays","Home","setHighlight","finishedAnimating","setAnimate","animate","highlight","onMouseEnter","onMouseLeave","Fade","in","level","transitionDelay","pull","align","offset","TypedCode","onFinish","interrupt","setText","slowlyType","time","MailOutlined","SolutionOutlined","DownloadIcons","download","About","finished","setFinished","onDoubleClick","Animate","transitionAppear","transitionName","NotFound","iconProps","twoToneColor","standardViews","delayTime","home","about","skills","projects","NextPage","contactSeen","setSeen","newView","whichData","UpSquareTwoTone","DownSquareTwoTone","App","window","basename","exact","to","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5b857622.chunk.js","sourcesContent":["import React from \"react\";\nimport { Modal, Row, Col, Typography } from \"antd\";\nimport { MailFilled, GithubFilled, LinkedinFilled } from \"@ant-design/icons\";\n\nconst { Text } = Typography;\n\nconst variants = {\n  email: {\n    icon: (props) => <MailFilled style={{ color: \"#8e24aa\" }} {...props} />,\n    tooltip: \"Email\",\n    link: \"mailto:wasuregusa18@gmail.com?subject=Connect\",\n    target: \"_self\",\n  },\n  github: {\n    icon: (props) => <GithubFilled style={{ color: \"#000\" }} {...props} />,\n    tooltip: \"Github\",\n    link: \"https://github.com/wasuregusa18\",\n    target: \"_blank\",\n  },\n  linkedin: {\n    icon: (props) => <LinkedinFilled style={{ color: \"#0077b5\" }} {...props} />,\n    tooltip: \"LinkedIn\",\n    link: \"https://www.linkedin.com/in/christopher-huber-3681637b/\",\n    target: \"_blank\",\n  },\n};\n\nfunction ContactIcon(props) {\n  const variant = variants[props.variant];\n  return (\n    <>\n      <a target={variant.target} rel=\"noreferrer\" href={variant.link}>\n        {variant[\"icon\"]()}\n      </a>\n      <Text\n        style={{ display: \"block\", textAlign: \"center\", fontSize: \"medium\" }}\n      >\n        {variant.tooltip}\n      </Text>\n    </>\n  );\n}\n\nconst Contact = ({ isModalVisible, handleModalExit }) => {\n  const icons = [\"email\", \"github\", \"linkedin\"];\n  return (\n    <Modal\n      title=\"Contact Me\"\n      visible={isModalVisible}\n      footer={null}\n      onCancel={handleModalExit}\n    >\n      <Row\n        justify=\"space-around\"\n        gutter={[12, 24]}\n        style={{ fontSize: \"xxx-large\" }}\n      >\n        {icons.map((i, index) => (\n          <Col key={index}>\n            <ContactIcon variant={i} />\n          </Col>\n        ))}\n      </Row>\n    </Modal>\n  );\n};\n\nexport default Contact;\n","import { useEffect } from \"react\";\n\nconst useUpdateTitle = (title) => {\n  useEffect(() => (document.title = title), [title]);\n};\n\nexport default useUpdateTitle;\n","const formatStringToCamelCase = (str) => {\n  const splitted = str.split(\"-\");\n  if (splitted.length === 1) return splitted[0];\n  return (\n    splitted[0] +\n    splitted\n      .slice(1)\n      .map((word) => word[0].toUpperCase() + word.slice(1))\n      .join(\"\")\n  );\n};\n\nconst getStyleObjectFromString = (str) => {\n  const style = {};\n  str.split(\";\").forEach((el) => {\n    const [property, value] = el.split(\":\");\n    if (!property) return;\n\n    const formattedProperty = formatStringToCamelCase(property.trim());\n    style[formattedProperty] = value.trim();\n  });\n\n  return style;\n};\n\nexport default getStyleObjectFromString;\n","import Icon from \"@ant-design/icons\";\nimport getStyleObjectFromString from \"../helper/str2obj\";\n\n//edit the path to get the desired effect\n// orginally all the lines were #414042\n// and the background was \"fill:#ffffff;fill-opacity:1;\nconst InkstoneSvgNoBG = () => (\n  <svg viewBox=\"0 0 80 80\" height=\"80\" width=\"80\" id=\"svg2\" version=\"1.1\">\n    <defs id=\"defs6\" />\n    <g transform=\"matrix(1.3333333,0,0,-1.3333333,0,80)\" id=\"g10\">\n      <g transform=\"scale(0.1)\" id=\"g12\">\n        <path\n          id=\"path14\"\n          style={getStyleObjectFromString(\n            \"fill:rgba(255, 255, 255, 0.3);fill-rule:nonzero;stroke:none\"\n          )}\n          d=\"M 600,0 H 0 V 600 H 600 V 0\"\n        />\n        <path\n          id=\"path16\"\n          style={getStyleObjectFromString(\n            \"fill:none;stroke:#ffffff ;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:10;stroke-dasharray:none;stroke-opacity:1\"\n          )}\n          d=\"M 355,165 H 165 v 270 h 190 z\"\n        />\n        <path\n          id=\"path18\"\n          style={getStyleObjectFromString(\n            \"fill:none;stroke:#ffffff ;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:10;stroke-dasharray:none;stroke-opacity:1\"\n          )}\n          d=\"M 315,185 H 205 c -11.047,0 -20,8.953 -20,20 v 170 c 0,11.047 8.953,20 20,20 h 110 c 11.047,0 20,-8.953 20,-20 V 205 c 0,-11.047 -8.953,-20 -20,-20 z\"\n        />\n        <path\n          id=\"path20\"\n          style={getStyleObjectFromString(\n            \"fill:none;stroke:#ffffff ;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:10;stroke-dasharray:none;stroke-opacity:1\"\n          )}\n          d=\"M 205,355 H 315\"\n        />\n        <path\n          id=\"path22\"\n          style={getStyleObjectFromString(\n            \"fill:none;stroke:#ffffff ;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:10;stroke-dasharray:none;stroke-opacity:1\"\n          )}\n          d=\"m 385,375 v 15 c 0,9.871 2.922,19.383 8.398,27.598 L 405,435 416.602,417.598 C 422.078,409.383 425,399.871 425,390 v -15\"\n        />\n        <path\n          id=\"path24\"\n          style={getStyleObjectFromString(\n            \"fill:none;stroke:#ffffff ;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:10;stroke-dasharray:none;stroke-opacity:1\"\n          )}\n          d=\"M 435,375 H 375\"\n        />\n        <path\n          id=\"path26\"\n          style={getStyleObjectFromString(\n            \"fill:none;stroke:#ffffff ;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:10;stroke-dasharray:none;stroke-opacity:1\"\n          )}\n          d=\"m 415,165 h -20 l -10,160 v 50 h 40 v -50 z\"\n        />\n        <path\n          id=\"path28\"\n          style={getStyleObjectFromString(\n            \"fill:none;stroke:#ffffff ;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:10;stroke-dasharray:none;stroke-opacity:1\"\n          )}\n          d=\"m 385,325 h 40\"\n        />\n      </g>\n    </g>\n  </svg>\n);\n\nconst InkstoneIcon = (props) => <Icon component={InkstoneSvgNoBG} {...props} />;\nexport default InkstoneIcon;\n","/* eslint-disable no-fallthrough */\nimport React, { useState } from \"react\";\nimport { Layout, Menu, Breadcrumb } from \"antd\";\nimport {\n  ContactsOutlined,\n  DotChartOutlined,\n  ProjectOutlined,\n  MobileOutlined,\n  HomeOutlined,\n} from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Contact from \"./Contact\";\nimport useUpdateTitle from \"../hooks/updateTitle\";\nimport InkstoneIcon from \"./InkstoneIcon\";\nimport \"./Framework.css\";\n\nconst { Content, Footer, Sider } = Layout;\nconst menuItems = [\n  {\n    key: \"home\",\n    icon: <HomeOutlined />,\n  },\n  {\n    key: \"about\",\n    icon: <ContactsOutlined />,\n  },\n  {\n    key: \"skills\",\n    icon: <DotChartOutlined />,\n  },\n  {\n    key: \"projects\",\n    icon: <ProjectOutlined />,\n  },\n  {\n    key: \"contact\",\n    icon: <MobileOutlined />,\n  },\n  // { key: \"404\", icon: <WarningOutlined /> },\n];\nconst views = [\"home\", \"about\", \"skills\", \"projects\", \"404\"];\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction findCurrentPage(path) {\n  if (path === \"/\") return \"home\";\n  else if (views.includes(path.slice(1))) return path.slice(1);\n  else return \"404\";\n}\n\nconst Framework = (props) => {\n  const [collapsed, setCollapsed] = useState(true);\n\n  const history = useHistory();\n  let currentPage = findCurrentPage(history.location.pathname);\n  const titleString =\n    currentPage === \"home\" ? \"\" : \" - \" + capitalize(currentPage);\n  useUpdateTitle(`Christopher Huber${titleString}`);\n\n  const breadcrumbData = [\n    \"Coders\",\n    \"Christopher Huber\",\n    capitalize(currentPage),\n  ];\n\n  const handleClick = (e) => {\n    if (e.key === \"contact\") {\n      props.setModalVisible(true);\n    } else {\n      props.setSelected([e.key]);\n      history.push(e.key);\n    }\n  };\n\n  const onCollapse = (collapsed) => setCollapsed((preVal) => !preVal);\n\n  // Header component\n  //   const [headerHover, setHover] = useState(false);\n  //   const suffix = headerHover ? \" header-hovered\" : \"\";\n  //   const headerClasses = \"site-header site-layout-background\" + suffix;\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\n        <InkstoneIcon\n          className=\"inkstone\"\n          style={!collapsed ? { left: \"60px\" } : {}}\n        />\n        <Menu\n          theme=\"dark\"\n          selectedKeys={props.menuSelected}\n          mode=\"inline\"\n          onClick={handleClick}\n        >\n          {menuItems.map((menuItem) => (\n            <Menu.Item key={menuItem.key} icon={menuItem.icon}>\n              {capitalize(menuItem.key)}\n            </Menu.Item>\n          ))}\n        </Menu>\n      </Sider>\n      <Layout className=\"site-layout\">\n        {/* <Header\n          className={headerClasses}\n          style={{ padding: 0 }}\n          onMouseOver={() => setHover(true)}\n          onMouseOut={() => setHover(false)}\n        >\n          <Title style={{ display: \"inline\" }} level={4}>\n            {currentPage.icon} {capitalize(currentPage.key)}\n          </Title>\n        </Header> */}\n        <Content style={{ margin: \"0 16px\" }}>\n          <Breadcrumb style={{ margin: \"16px 0\" }}>\n            {breadcrumbData.map((x, index) => {\n              if (x !== \"Home\")\n                return <Breadcrumb.Item key={index}>{x}</Breadcrumb.Item>;\n              else return null;\n            })}\n          </Breadcrumb>\n          <div\n            className=\"site-layout-background\"\n            style={{ padding: 24, minHeight: 360 }}\n          >\n            <Contact\n              isModalVisible={props.modalVisible}\n              handleModalExit={() => props.setModalVisible(false)}\n            />\n            {props.children}\n          </div>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>\n          <p>Christopher Huber ©{new Date().getFullYear()}</p>\n        </Footer>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default Framework;\n","import React from \"react\";\nimport { Tag, List } from \"antd\";\nimport { CompassOutlined, DatabaseOutlined } from \"@ant-design/icons\";\n\nimport \"./ArrayKey.css\";\n\nconst keyData = {\n  \"Data Collection & Analysis\": (clss) => (\n    <DatabaseOutlined className={\"data-sci \" + clss} />\n  ),\n  \"Web Development\": (clss) => (\n    <CompassOutlined className={\"web-dev \" + clss} />\n  ),\n};\n\nconst ArrayKey = (props) => {\n  const iconClass = props.keysHovered ? \"hovered-keys\" : null;\n  return (\n    <List\n      className=\"key-array\"\n      grid={{\n        gutter: 16,\n        xs: 2,\n      }}\n      dataSource={Object.entries(keyData)}\n      renderItem={([tag, icon]) => (\n        <List.Item\n          onMouseOver={() => props.setKeysHovered(true)}\n          onMouseOut={() => props.setKeysHovered(false)}\n          key={tag}\n        >\n          <Tag className=\"key\">\n            {icon(iconClass)} = {tag}\n          </Tag>\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default ArrayKey;\nexport { keyData };\n","import React, { useState } from \"react\";\nimport { List, Tag } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\n\nimport ArrayKey, { keyData } from \"./ArrayKey\";\nimport \"./ProjectsArray.css\";\n\nimport project2grouping from \"../data/project2grouping.json\";\nimport project2index from \"../data/project2index.json\";\n\nconst { CheckableTag } = Tag;\nconst data = Object.keys(project2grouping);\n\nconst ProjectArray = (props) => {\n  const [keysHovered, setKeysHovered] = useState(false);\n  const iconClass = keysHovered ? \"hovered-keys\" : null;\n\n  const history = useHistory();\n  const handleClick = (e) => {\n    const index = project2index[e.target?.innerText?.trim()];\n    props.setCarousel(index ? index : 0);\n    props.setSelected([\"4\"]);\n    history.push(\"/projects\");\n  };\n  return (\n    <>\n      <List\n        className=\"project-array\"\n        header={<div>Projects</div>}\n        grid={{\n          gutter: 16,\n          xs: 1,\n          sm: 2,\n          md: 3,\n          lg: 3,\n          xl: 4,\n        }}\n        dataSource={data}\n        renderItem={(item) => (\n          <List.Item\n            onMouseOver={(event) =>\n              props.handleHover(event.target?.innerText?.trim())\n            }\n            onMouseOut={(event) => props.handleHover(\"\")}\n            key={item}\n          >\n            <CheckableTag className=\"project\" onClick={handleClick}>\n              {keyData[project2grouping[item]](iconClass)} {item}\n            </CheckableTag>\n          </List.Item>\n        )}\n      />\n      <ArrayKey keysHovered={keysHovered} setKeysHovered={setKeysHovered} />\n    </>\n  );\n};\n\nexport default ProjectArray;\n","import React, { useState } from \"react\";\nimport { Tag, Table } from \"antd\";\n\nimport ProjectArray from \"./ProjectsArray\";\nimport \"./Skills.css\";\n\nimport tableData from \"../data/tableData.json\";\nimport entry2related from \"../data/entry2related.json\";\n\nconst { CheckableTag } = Tag;\n\nconst SkillsTable = (props) => {\n  const [isHighlighted, setHighlighted] = useState([]);\n  const handleHover = (project) => {\n    entry2related[project]\n      ? setHighlighted(entry2related[project])\n      : setHighlighted([]);\n  };\n\n  const columns = [\n    {\n      title: \"Domain\",\n      dataIndex: \"area\",\n      key: \"area\",\n    },\n    {\n      title: \"Technologies\",\n      dataIndex: \"tech\",\n      key: \"tech\",\n      render: (tags) =>\n        tags.map((tag, index) => (\n          <CheckableTag\n            className=\"tableEntry\"\n            checked={isHighlighted.indexOf(tag) > -1}\n            key={index}\n          >\n            {tag.toUpperCase()}\n          </CheckableTag>\n        )),\n    },\n  ];\n\n  return (\n    <section id=\"skills\">\n      <ProjectArray handleHover={handleHover} {...props} />\n      <Table\n        className=\"skills-table\"\n        dataSource={tableData}\n        columns={columns}\n        pagination={false}\n        rowKey=\"id\"\n      />\n    </section>\n  );\n};\n\nexport default SkillsTable;\n","import React from \"react\";\nimport { Image } from \"antd\";\n\nconst isImageFile = (filename) => {\n  const isImage = /\\.(gif|jpe?g|tiff?|png|webp|bmp)$/i.test(filename);\n  const isVideo = /\\.(mp4|mov|wmv|avi)$/i.test(filename);\n  if (isImage) return true;\n  else if (isVideo) return false;\n  else throw new Error(\"filename neither image nor video\");\n};\n\nconst style = {\n  margin: \"auto\",\n};\n\n// media should be an array of image files or video files\n// need to be in public folder for src to work\nconst SlideMedia = ({ media }) => {\n  // let mediaArray = media.split(\"-\");\n  let mediaArray = [media]; //only using one currently\n  const content = (props) =>\n    mediaArray.map((filename, index) => {\n      if (isImageFile(filename))\n        return (\n          <Image\n            {...props}\n            key={index}\n            className=\"slide-image\"\n            src={`${filename}`}\n            alt=\"ProjectImage\"\n          />\n        );\n      else\n        return (\n          <video\n            {...props}\n            controls\n            key={index}\n            className=\"slide-video\"\n            src={`${filename}`}\n            alt=\"ProjectVideo\"\n          />\n        );\n    });\n  return (\n    <div className=\"media-container\">\n      {content({ style: style })}\n      {/* {media.length > 1 ? (\n        <Carousel style={style} autoplay dots={false}>\n          {content({ style: style })}\n        </Carousel>\n      ) : (\n        content({ style: style })\n      )} */}\n    </div>\n  );\n};\n\nexport default SlideMedia;\n","import React from \"react\";\nimport { List, Tag } from \"antd\";\n\nimport \"./TechList.css\";\n\nconst { CheckableTag } = Tag;\n\nconst TechList = ({ tech }) => (\n  <List\n    grid={{\n      xs: 1,\n      sm: 4,\n      md: 6,\n      lg: tech.length,\n      xl: tech.length,\n    }}\n    dataSource={tech}\n    renderItem={(item) => (\n      <List.Item style={{ width: \"fit-content\" }}>\n        <CheckableTag color=\"#2db7f5\">{\"#\" + item}</CheckableTag>\n      </List.Item>\n    )}\n  />\n);\n\nexport default TechList;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Steps } from \"antd\";\n\nconst { Step } = Steps;\n\nconst MethodologySteps = ({\n  methArray,\n  isVisible = false,\n  direction = \"vertical\",\n}) => {\n  const [currentStep, setStep] = useState(0);\n  const timeoutRef = useRef();\n\n  useEffect(() => {\n    //reset when slide not visible\n    if (!isVisible) {\n      setStep(0);\n    } else {\n      const moveNextStep = (count = 0) => {\n        if (count < methArray.length) {\n          setStep((preVal) => ++preVal);\n          timeoutRef.current = setTimeout(() => moveNextStep(++count), 1000);\n        }\n      };\n      moveNextStep();\n      return () => clearTimeout(timeoutRef.current);\n    }\n  }, [isVisible, methArray.length]);\n\n  return (\n    <Steps progressDot current={currentStep} direction={direction}>\n      {methArray.map((item, index) => (\n        <Step title={item} key={index} />\n      ))}\n    </Steps>\n  );\n};\n\nexport default MethodologySteps;\n","import React from \"react\";\nimport { Row, Col, Button, Tooltip } from \"antd\";\nimport {\n  LaptopOutlined,\n  CameraOutlined,\n  CodeOutlined,\n} from \"@ant-design/icons\";\n\nconst LinkArray = ({ media, link, source }) => {\n  function shouldShow(x) {\n    switch (x) {\n      case \"ND\":\n        return [false, \"Non-Disclosure\"];\n      case \"UD\":\n        return [false, \"Under Development\"];\n      case null:\n        return [false, \"\"];\n      case undefined:\n        return [false, \"\"];\n      default:\n        return [true, \"\"];\n    }\n  }\n\n  const icons = [<CameraOutlined />, <LaptopOutlined />, <CodeOutlined />];\n  const links = [media, link, source];\n  const text = [\"Media\", \"Link\", \"Source\"];\n  //   media needs different treatment\n\n  return (\n    <Row justify=\"space-around\" gutter={12} style={{ fontSize: \"x-large\" }}>\n      {links.slice(1).map((l, i) => {\n        let [toShow, title] = shouldShow(l);\n        const button = (\n          <Button\n            href={l}\n            target=\"_blank\"\n            type=\"link\"\n            disabled={!toShow}\n            icon={icons[i + 1]}\n          >\n            {text[i + 1]}\n          </Button>\n        );\n        return (\n          <Col key={i}>\n            {!toShow && l ? (\n              <Tooltip title={title} placement=\"bottom\">\n                <span>{button}</span>\n              </Tooltip>\n            ) : (\n              button\n            )}\n          </Col>\n        );\n      })}\n    </Row>\n  );\n};\n\nexport default LinkArray;\n","import React, { useState } from \"react\";\nimport { Typography } from \"antd\";\n\nimport \"./CollapsableParagraph.css\";\n\nconst { Paragraph } = Typography;\n\nconst CollapsableParagraph = ({ text, settings }) => {\n  const [expanded, setExpanded] = useState(false);\n  const [key, setKey] = useState(0);\n  let newSettings = {\n    ...settings,\n    onExpand: () => {\n      setExpanded(true);\n    },\n  };\n  const onClose = () => {\n    setKey((preVal) => ++preVal % 2);\n    setExpanded(false);\n  };\n  return (\n    <>\n      <Paragraph ellipsis={newSettings} key={key}>\n        {text}\n        {expanded && (\n          <button className=\"close-expanded\" onClick={onClose}>\n            Collapse\n          </button>\n        )}\n      </Paragraph>\n    </>\n  );\n};\n\nexport default CollapsableParagraph;\n","import React from \"react\";\nimport { Layout, Row, Col, Typography, Divider } from \"antd\";\nimport {\n  CompassOutlined,\n  DatabaseOutlined,\n  AimOutlined,\n  ControlOutlined,\n  NodeIndexOutlined,\n} from \"@ant-design/icons\";\n\nimport SlideMedia from \"./SlideMedia\";\nimport TechList from \"./TechList\";\nimport MethodologySteps from \"./MethodologySteps\";\nimport LinkArray from \"./LinkArray\";\nimport CollapsableParagraph from \"./CollapsableParagraph\";\nimport \"./ProjectSlide.css\";\n\nconst { Header, Content } = Layout;\nconst { Paragraph } = Typography;\n\nconst ellipsisSetting = {\n  media: {\n    rows: 2,\n    expandable: true,\n  },\n  noMedia: { rows: 6, expandable: true },\n};\n\nconst ContentImage = ({\n  objective,\n  implementation,\n  methArray,\n  isVisible,\n  media,\n}) => {\n  return (\n    <>\n      <Row gutter={20}>\n        <Col span={24} style={{ overflow: \"hidden\" }}>\n          <SlideMedia media={media} />\n          <h4>\n            <AimOutlined /> Objective\n          </h4>\n          <Paragraph>{objective}</Paragraph>\n          <h4>\n            <NodeIndexOutlined /> Implementation\n          </h4>\n          <CollapsableParagraph\n            text={implementation}\n            settings={ellipsisSetting.media}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col style={{ width: \"95%\", overflow: \"hidden\" }}>\n          <h4 style={{ marginBottom: \"20px\" }}>\n            <ControlOutlined /> Methodology\n          </h4>\n          <MethodologySteps\n            methArray={methArray}\n            isVisible={isVisible}\n            direction=\"horizontal\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst ContentNoImage = ({\n  objective,\n  implementation,\n  methArray,\n  isVisible,\n}) => {\n  return (\n    <Row gutter={20}>\n      <Col span={12}>\n        <h4>\n          <AimOutlined /> Objective\n        </h4>\n        <Paragraph>{objective}</Paragraph>\n        <h4>\n          <NodeIndexOutlined /> Implementation\n        </h4>\n        <CollapsableParagraph\n          text={implementation}\n          settings={ellipsisSetting.noMedia}\n        />\n      </Col>\n      <Col span={12}>\n        <MethodologySteps methArray={methArray} isVisible={isVisible} />\n      </Col>\n    </Row>\n  );\n};\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nconst iconLookup = {\n  \"Web Development\": <CompassOutlined />,\n  \"Data Collection & Analysis\": <DatabaseOutlined />,\n};\n\nconst ProjectSlideWrapper = ({ project, isVisible }) => {\n  const {\n    name,\n    objective,\n    implementation,\n    methodology,\n    media,\n    tech,\n    link,\n    source,\n    grouping,\n  } = project;\n  let methArray = methodology.split(\"\\n\");\n  methArray = methArray.map((line) => capitalize(line));\n\n  const contentProps = {\n    objective: objective,\n    implementation: implementation,\n    methArray: methArray,\n    isVisible: isVisible,\n    media: media,\n  };\n  return (\n    <Layout className=\"project-slide\">\n      <Header className=\"layout-header\">\n        <h3>\n          {iconLookup[grouping]} {name}\n        </h3>\n      </Header>\n      <Content className=\"layout-content\">\n        <div className=\"content-container\">\n          <div style={{ height: \"5%\" }} />\n          {media ? (\n            <ContentImage {...contentProps} />\n          ) : (\n            <ContentNoImage {...contentProps} />\n          )}\n          <Divider />\n          <TechList tech={tech} />\n          <LinkArray link={link} source={source} media={media} />\n        </div>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default ProjectSlideWrapper;\n","import React, { useState, useRef } from \"react\";\nimport { Carousel } from \"antd\";\nimport { useIdleTimer } from \"react-idle-timer\";\n\nimport ProjectSlide from \"./ProjectSlide\";\nimport ProjectData from \"../data/projectData.json\";\nimport \"./Projects.css\";\n\nconst Projects = (props) => {\n  const intervalTimer = useRef();\n  useIdleTimer({\n    timeout: 1000 * 60,\n    onIdle: () => {\n      if (slider.current)\n        intervalTimer.current = setInterval(() => slider.current.next(), 5000);\n    },\n    onActive: () => {\n      if (intervalTimer.current) clearInterval(intervalTimer.current);\n    },\n    debounce: 500,\n  });\n\n  // note this is not controlled - it is updated on change and then passed down to slides\n  const [currentSlide, setSlide] = useState(props.carouselShowing);\n  const slider = useRef();\n  return (\n    <div>\n      <Carousel\n        dotPosition=\"left\"\n        initialSlide={props.carouselShowing}\n        autoplay={false}\n        ref={(ref) => {\n          slider.current = ref;\n        }}\n        afterChange={() =>\n          setSlide(slider.current.innerSlider.state.currentSlide)\n        }\n      >\n        {ProjectData.map((project, index) => (\n          <ProjectSlide\n            key={index}\n            isVisible={currentSlide === index}\n            project={project}\n          />\n        ))}\n      </Carousel>\n    </div>\n  );\n};\n\nexport default Projects;\n","import React, { useEffect, useRef } from \"react\";\nimport Prism from \"prismjs\";\n//necessary for jsx + python highlighting\nimport PrismJsx from \"prismjs/components/prism-jsx.min\";\nimport PrismPython from \"prismjs/components/prism-python.min\";\n\nimport \"../prism-default.css\";\nimport \"./Code.css\";\n\nexport default function Code({ code, language }) {\n  const codeBlock = useRef();\n\n  useEffect(() => {\n    if (codeBlock.current) {\n      Prism.highlightElement(codeBlock.current);\n    }\n  }, [language, code]);\n  return (\n    <div className=\"code-block\">\n      <pre className={`language-${language}`}>\n        <code ref={codeBlock} className={`language-${language}`}>\n          {code}\n        </code>\n      </pre>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Quill.css\";\n\nconst hide = { display: \"none\" };\n\nconst Quill = ({ toHighlight = true }) => (\n  <div>\n    <img\n      className=\"quill\"\n      style={toHighlight ? hide : null}\n      src=\"newQuillPen.png\"\n      alt=\"quill\"\n    />\n    <img\n      className=\"quill\"\n      style={toHighlight ? null : hide}\n      src=\"coloredQuillPen.png\"\n      alt=\"quill\"\n    />\n  </div>\n);\n\nexport default Quill;\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Typography } from \"antd\";\nimport { Fade } from \"@material-ui/core\";\n\nimport Code from \"./Code\";\nimport Quill from \"./Quill\";\nimport \"./Home.css\";\n\nconst { Title } = Typography;\n\nconst codeToDisplay = `from flask import Flask\napp = Flask(__name__)\n\n@app.route('/')\ndef hello_world():\n    return 'Hello, World!'`;\nconst notALanguage = \"\";\nconst codeName = `<ChristopherHuber />`;\nconst fadeInTime = 750;\nconst delays = { name: \"0ms\", tag: \"750ms\", img: \"1500ms\", code: \"2250ms\" };\n\nconst Home = () => {\n  const [toHighlight, setHighlight] = useState(false);\n  let [finishedAnimating, setAnimate] = useState(false);\n\n  // disallow hovering until animation finished - and flash hover once\n  useEffect(() => {\n    let animate = setTimeout(() => setAnimate(true), 5000);\n    let highlight = setTimeout(() => setHighlight(true), 3300);\n    return () => {\n      clearTimeout(animate);\n      clearTimeout(highlight);\n    };\n  }, [setAnimate, setHighlight]);\n\n  return (\n    <>\n      <Row style={{ height: \"50px\" }}></Row>\n      <div\n        className=\"hover-box\"\n        onMouseEnter={() => finishedAnimating && setHighlight(true)}\n        onMouseLeave={() => finishedAnimating && setHighlight(false)}\n      />\n      <Row justify=\"center\" className=\"top-row\">\n        <Fade in={true} timeout={fadeInTime}>\n          <Col push={3} span={18}>\n            <Title level={2}>\n              <Code\n                code={codeName}\n                language={toHighlight ? \"jsx\" : notALanguage}\n              />\n            </Title>\n          </Col>\n        </Fade>\n        <Fade\n          in={true}\n          style={{ transitionDelay: delays.img }}\n          timeout={fadeInTime}\n        >\n          <Col pull={2} span={6}>\n            <Quill toHighlight={toHighlight} />\n          </Col>\n        </Fade>\n      </Row>\n\n      <Row\n        className=\"middle-row\"\n        justify=\"center\"\n        style={{ marginBottom: \"30px\" }}\n        align=\"middle\"\n      >\n        <Fade\n          in={true}\n          timeout={fadeInTime}\n          style={{ transitionDelay: delays.tag }}\n        >\n          <Col>\n            <Title level={3}>\n              <Code\n                code={`I.write(\"Code\")`}\n                language={toHighlight ? \"python\" : notALanguage}\n              />\n            </Title>\n          </Col>\n        </Fade>\n      </Row>\n\n      <Fade\n        in={true}\n        style={{ transitionDelay: delays.code }}\n        timeout={fadeInTime}\n      >\n        <Row\n          style={{ height: \"50%\" }}\n          justify=\"space-around\"\n          className=\"bottom-row\"\n        >\n          <Col offset={3} span={6}>\n            <Code\n              code={codeToDisplay}\n              language={toHighlight ? \"python\" : notALanguage}\n            />\n          </Col>\n          <Col span={6}></Col>\n        </Row>\n      </Fade>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport Code from \"./Code\";\nimport \"./TypedCode.css\";\n\n//interrupt should be a ref\n//onFinish will get sent a true value when code is finished typing\nconst TypedCode = ({ onFinish, code, language, interrupt }) => {\n  const [text, setText] = useState(\"\");\n  let timeoutRef = useRef();\n\n  useEffect(() => {\n    function slowlyType(index = 0, time = 50) {\n      if (interrupt.current || index === code.length) {\n        setText(code);\n        if (onFinish) onFinish(true);\n      } else {\n        timeoutRef.current = setTimeout(() => {\n          setText((preVal) => `${preVal}${code[index]}`);\n          slowlyType(index + 1);\n        }, time);\n      }\n    }\n    slowlyType();\n    return () => {\n      clearTimeout(timeoutRef.current);\n      if (interrupt.current) interrupt.current = true;\n      if (onFinish) onFinish(true);\n    };\n  }, [onFinish, code, interrupt]);\n  return (\n    <div className=\"typed-code\">\n      <Code code={text} language={language} />\n    </div>\n  );\n};\n\nexport default TypedCode;\n","import React from \"react\";\nimport { Tooltip, Col, Row } from \"antd\";\nimport { MailOutlined, SolutionOutlined } from \"@ant-design/icons\";\nimport \"./DownloadIcons.css\";\n\nconst variants = [\n  { icon: <MailOutlined />, text: \"Cover Letter\", path: \"CoverLetter.pdf\" },\n  { icon: <SolutionOutlined />, text: \"Resume\", path: \"Resume.pdf\" },\n];\n\nconst DownloadIcons = () => {\n  return (\n    <div className=\"download-icons\">\n      <Row gutter={50}>\n        {variants.map((item, index) => (\n          <Col key={index}>\n            <Tooltip title={item.text}>\n              <a className=\"download-icon\" download href={item.path}>\n                {item.icon}\n              </a>\n            </Tooltip>\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default DownloadIcons;\n","import React, { useState, useRef } from \"react\";\nimport { Row, Col, Typography } from \"antd\";\nimport Animate from \"rc-animate\";\n\nimport TypedCode from \"./TypedCode\";\nimport DownloadIcons from \"./DownloadIcons\";\nimport Code from \"./Code\";\nimport Quill from \"./Quill\";\nimport \"./About.css\";\nconst { Title } = Typography;\n\nconst codeName = `<ChristopherHuber />`;\nconst codeToType = `let Christopher;\nChristopher =\n  [\n      \"Coder\", \n      \"Poet\", \n      \"Thinker\", \n      \"Translator\", \n      \"Learner\", \n      \"Strategist\"\n    ] && seekingEmployment;`;\n\nconst About = () => {\n  const [finished, setFinished] = useState(false);\n  const interrupt = useRef(false);\n\n  return (\n    <section\n      id=\"about\"\n      onDoubleClick={() => {\n        interrupt.current = true;\n        setFinished(true);\n      }}\n    >\n      <Row style={{ height: \"50px\" }}></Row>\n      <Row justify=\"center\" className=\"top-row\">\n        <Col push={3} span={18}>\n          <Title level={2}>\n            <Code code={codeName} language=\"jsx\" />\n          </Title>\n        </Col>\n        <Col pull={2} span={6}>\n          <Quill toHighlight={finished} />\n        </Col>\n      </Row>\n      <Row className=\"code-row\" justify=\"center\" align=\"top\">\n        <Col pull={3}>\n          <TypedCode\n            onFinish={setFinished}\n            code={codeToType}\n            language=\"js\"\n            interrupt={interrupt}\n          />\n        </Col>\n      </Row>\n\n      <Animate transitionAppear transitionName=\"fade\">\n        {finished && (\n          <Row justify=\"center\">\n            <Col>\n              <DownloadIcons />\n            </Col>\n          </Row>\n        )}\n      </Animate>\n    </section>\n  );\n};\n\nexport default About;\n","import React, { useRef } from \"react\";\nimport { Row, Col } from \"antd\";\n\nimport TypedCode from \"./TypedCode\";\nimport \"./NotFound.css\";\n\nconst codeToDisplay = `# Page Not Found\nraise ValueError`;\n\n// const codeToDisplay2 = `#404\n// if page is not_found:\n//     raise NameError`;\n\nconst NotFound = () => {\n  const interrupt = useRef(false);\n  return (\n    <div id=\"NotFound\">\n      <Row style={{ height: \"50px\" }}></Row>\n      <Row className=\"code-row\" justify=\"center\" align=\"top\">\n        <Col>\n          <TypedCode\n            code={codeToDisplay}\n            language=\"python\"\n            interrupt={interrupt}\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { useState } from \"react\";\nimport { Button, Tooltip } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  DownSquareTwoTone,\n  UpSquareTwoTone,\n  MobileOutlined,\n} from \"@ant-design/icons\";\nimport { Fade } from \"@material-ui/core\";\n\nconst iconProps = { twoToneColor: \"#0000\", id: \"next-page-icon\" };\nconst standardViews = [\"home\", \"about\", \"skills\", \"projects\"];\nconst delayTime = {\n  home: \"4500ms\",\n  about: \"11000ms\",\n  skills: \"1000ms\",\n  projects: \"1000ms\",\n};\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nconst NextPage = ({\n  menuSelected,\n  setSelected,\n  setModalVisible,\n  modalVisible,\n}) => {\n  const history = useHistory();\n  const [contactSeen, setSeen] = useState(false);\n\n  const currentPage =\n    standardViews.indexOf(menuSelected[0]) > -1 ? menuSelected[0] : undefined;\n\n  const newView =\n    standardViews[\n      (standardViews.indexOf(currentPage) + 1) % standardViews.length\n    ];\n\n  // if not last page - down; if last page but contact not seen contact; else up\n  const isLastPage = currentPage === standardViews[standardViews.length - 1];\n  const whichData = !isLastPage\n    ? { icon: <DownSquareTwoTone {...iconProps} />, text: newView }\n    : contactSeen\n    ? { icon: <UpSquareTwoTone {...iconProps} />, text: newView }\n    : { icon: <MobileOutlined {...iconProps} />, text: \"Contact\" };\n\n  const nextPage = () => {\n    if (newView === \"home\" && !contactSeen) {\n      setModalVisible(true);\n      setTimeout(() => setSeen(true), 500);\n    } else {\n      setSelected([newView]);\n      history.push(newView);\n    }\n  };\n\n  const button = (\n    <Button\n      className=\"next-page\"\n      type=\"default\"\n      onClick={nextPage}\n      icon={whichData.icon}\n    />\n  );\n  if (!currentPage) return null;\n  return (\n    <>\n      <Fade\n        in={true}\n        style={{ transitionDelay: delayTime[currentPage] }}\n        timeout={1000}\n      >\n        <p style={{ textAlign: \"right\" }}>\n          {!modalVisible ? (\n            <Tooltip title={capitalize(whichData.text)} placement=\"bottom\">\n              {button}\n            </Tooltip>\n          ) : (\n            button\n          )}\n        </p>\n      </Fade>\n    </>\n  );\n};\n\nexport default NextPage;\n","import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Framework from \"./components/Framework\";\nimport SkillsTable from \"./components/Skills\";\nimport Projects from \"./components/Projects\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport NotFound from \"./components/NotFound\";\nimport NextPage from \"./components/NextPage\";\n\nimport \"./App.css\";\n\nfunction App() {\n  let path = window.location.pathname.slice(1 + 10); //when hosted on /portfolio\n  path = path === \"\" ? \"home\" : path;\n  const [carouselShowing, setCarousel] = useState(0);\n  const [menuSelected, setSelected] = useState([path]);\n  const [modalVisible, setModalVisible] = useState(false); //Contact me Modal\n\n  return (\n    <Router basename=\"/portfolio/\">\n      <Framework\n        modalVisible={modalVisible}\n        setModalVisible={setModalVisible}\n        menuSelected={menuSelected}\n        setSelected={setSelected}\n      >\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/home\" />\n          </Route>\n          <Route path=\"/home\">\n            <Home />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/skills\">\n            <SkillsTable setCarousel={setCarousel} setSelected={setSelected} />\n          </Route>\n          <Route path=\"/projects\">\n            <Projects\n              carouselShowing={carouselShowing}\n              setCarousel={setCarousel}\n            />\n          </Route>\n          <Route path=\"/404\" component={NotFound} />\n          <Redirect to=\"/404\" />\n        </Switch>\n        {/* key makes it remount every time */}\n        <NextPage\n          key={path}\n          menuSelected={menuSelected}\n          setSelected={setSelected}\n          setModalVisible={setModalVisible}\n          modalVisible={modalVisible}\n        />\n      </Framework>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}